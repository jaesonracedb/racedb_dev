{"ast":null,"code":"var _jsxFileName = \"/home/zythe773/Documents/Work/racedb/racedbV3/racedb_dev/src/pages/AddEvent.js\";\nimport React, { Component } from 'react';\n\nclass AddEvent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // id: null,\n      name: '',\n      event_date: null,\n      location_city: '',\n      state: '',\n      category: '',\n      distance: '',\n      swim_distance: '',\n      bike_distance: '',\n      run_distance: '',\n      website: '',\n      email: '',\n      summary: '',\n      race_type: '',\n      cycling_type: ''\n    };\n    this.handleAddEvent = this.handleAddEvent.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleEvent_date = this.handleEvent_date.bind(this);\n    this.handleLocationCity = this.handleLocationCity.bind(this);\n    this.handleState = this.handleState.bind(this);\n    this.handleCategory = this.handleCategory.bind(this);\n    this.handleDistance = this.handleDistance.bind(this);\n    this.handleSwimDistance = this.handleSwimDistance.bind(this);\n    this.handleBikeDistance = this.handleBikeDistance.bind(this);\n    this.handleRunDistance = this.handleRunDistance.bind(this);\n    this.handleWebsite = this.handleWebsite.bind(this);\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleSummary = this.handleSummary.bind(this);\n    this.handleRaceType = this.handleRaceType.bind(this);\n    this.handleCyclingType = this.handleCyclingType.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      name: this.handleNameChange,\n      event_date: this.handleEvent_date,\n      location_city: this.handleLocationCity,\n      state: this.handleState,\n      category: this.handleCategory,\n      distance: this.handleDistance,\n      swim_distance: this.handleSwimDistance,\n      bike_distance: this.handleBikeDistance,\n      run_distance: this.handleRunDistance,\n      website: this.handleWebsite,\n      email: this.email,\n      summary: this.handleSummary,\n      race_type: this.handleRaceType,\n      cycling_type: this.handleCyclingType\n    });\n    console.log(this.state);\n  }\n\n  handleAddEvent(e) {\n    fetch('http://localhost:3001/add-event', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        \"name\": this.state.name,\n        \"event_date\": this.state.event_date,\n        \"location_city\": this.state.location_city,\n        \"state\": this.state.state,\n        \"category\": this.state.category,\n        \"distance\": this.state.distance,\n        \"swim_distance\": this.state.swim_distance,\n        \"bike_distance\": this.state.bike_distance,\n        \"run_distance\": this.state.run_distance,\n        \"website\": this.state.website,\n        \"email\": this.state.email,\n        \"summary\": this.state.summary,\n        \"race_type\": this.state.race_type,\n        \"cycling_type\": this.state.cycling_type\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(body => {\n      if (body.statusCode === 200) {// this.setState: body.message,\n      } else {}\n    });\n  }\n\n  handleNameChange(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  handleEvent_date(e) {\n    this.setState({\n      event_date: e.target.value\n    });\n  }\n\n  handleLocationCity(e) {\n    this.setState({\n      location_city: e.target.value\n    });\n  }\n\n  handleState(e) {\n    this.setState({\n      state: e.target.value\n    });\n  }\n\n  handleCategory(e) {\n    this.setState({\n      category: e.target.value\n    });\n  }\n\n  handleDistance(e) {\n    this.setState({\n      distance: e.target.value\n    });\n  }\n\n  handleSwimDistance(e) {\n    this.setState({\n      swim_distance: e.target.value\n    });\n  }\n\n  handleBikeDistance(e) {\n    this.setState({\n      bike_distance: e.target.value\n    });\n  }\n\n  handleRunDistance(e) {\n    this.setState({\n      run_distance: e.target.value\n    });\n  }\n\n  handleWebsite(e) {\n    this.setState({\n      website: e.target.value\n    });\n  }\n\n  handleEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  handleSummary(e) {\n    this.setState({\n      summary: e.target.value\n    });\n  }\n\n  handleRaceType(e) {\n    this.setState({\n      race_type: e.target.value\n    });\n  }\n\n  handleCyclingType(e) {\n    this.setState({\n      cycling_type: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"nameIn\",\n      placeholder: \"Input race name\",\n      onChange: this.handleNameChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"event_dateIn\",\n      required: true,\n      pattern: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\",\n      onChange: this.handleEvent_date,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"location_cityIn\",\n      placeholder: \"Enter Location/State\",\n      onChange: this.handleLocationCity,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"stateIn\",\n      placeholder: \"Input State\",\n      onChange: this.handleState,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"categoryIn\",\n      placeholder: \"Input race category\",\n      onChange: this.handleCategory,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"distanceIn\",\n      placeholder: \"Input race Distance\",\n      onChange: this.handleDistance,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"swim_distanceIn\",\n      placeholder: \"Input swim distance\",\n      onChange: this.handleSwimDistance,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bike_distanceIn\",\n      placeholder: \"Input bike distance\",\n      onChange: this.handleBikeDistance,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"run_distanceIn\",\n      placeholder: \"Input run distance\",\n      onChange: this.handleRunDistance,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"websiteIn\",\n      placeholder: \"Input race website\",\n      onChange: this.handleWebsite,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"emailIn\",\n      placeholder: \"Input organizer email\",\n      onChange: this.handleEmail,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"summaryIn\",\n      placeholder: \"Input summary\",\n      onChange: this.handleSummary,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"race_typeIn\",\n      placeholder: \"Input race type\",\n      onChange: this.handleRaceType,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"cycling_typeIn\",\n      placeholder: \"Input cycling type\",\n      onChange: this.handleCyclingType,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"addEventButton\",\n      type: \"submit\",\n      onClick: this.handleAddEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Submit Race\"));\n  }\n\n}\n\nexport default AddEvent;","map":{"version":3,"sources":["/home/zythe773/Documents/Work/racedb/racedbV3/racedb_dev/src/pages/AddEvent.js"],"names":["React","Component","AddEvent","constructor","state","name","event_date","location_city","category","distance","swim_distance","bike_distance","run_distance","website","email","summary","race_type","cycling_type","handleAddEvent","bind","handleNameChange","handleEvent_date","handleLocationCity","handleState","handleCategory","handleDistance","handleSwimDistance","handleBikeDistance","handleRunDistance","handleWebsite","handleEmail","handleSummary","handleRaceType","handleCyclingType","componentWillMount","setState","console","log","e","fetch","method","headers","body","JSON","stringify","then","response","json","statusCode","target","value","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass AddEvent extends Component {\n  constructor(){\n    super()\n    this.state= {\n      // id: null,\n      name: '',\n      event_date: null,\n      location_city: '',\n      state:'',\n      category: '',\n      distance: '',\n      swim_distance:'',\n      bike_distance: '',\n      run_distance: '',\n      website: '',\n      email: '',\n      summary: '',\n      race_type:'',\n      cycling_type: ''\n    }\n    this.handleAddEvent = this.handleAddEvent.bind(this)\n    this.handleNameChange = this.handleNameChange.bind(this)\n    this.handleEvent_date = this.handleEvent_date.bind(this)\n    this.handleLocationCity = this.handleLocationCity.bind(this)\n    this.handleState = this.handleState.bind(this)\n    this.handleCategory = this.handleCategory.bind(this)\n    this.handleDistance = this.handleDistance.bind(this)\n    this.handleSwimDistance = this.handleSwimDistance.bind(this)\n    this.handleBikeDistance = this.handleBikeDistance.bind(this)\n    this.handleRunDistance = this.handleRunDistance.bind(this)\n    this.handleWebsite = this.handleWebsite.bind(this)\n    this.handleEmail= this.handleEmail.bind(this)\n    this.handleSummary = this.handleSummary.bind(this)\n    this.handleRaceType = this.handleRaceType.bind(this)\n    this.handleCyclingType = this.handleCyclingType.bind(this)\n  }\n\n  componentWillMount(){\n      this.setState({\n          name: this.handleNameChange,\n          event_date: this.handleEvent_date ,\n          location_city: this.handleLocationCity,\n          state: this.handleState,\n          category:this.handleCategory,\n          distance:this.handleDistance,\n          swim_distance:this.handleSwimDistance,\n          bike_distance:this.handleBikeDistance,\n          run_distance:this.handleRunDistance,\n          website:this.handleWebsite,\n          email:this.email,\n          summary: this.handleSummary,\n          race_type:this.handleRaceType,\n          cycling_type:this.handleCyclingType\n        })\n        console.log(this.state)\n      }\n\n  handleAddEvent(e){\n    fetch('http://localhost:3001/add-event',{\n      method: 'POST',\n      headers : {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       },\n      body: JSON.stringify({\n        \"name\": this.state.name,\n        \"event_date\": this.state.event_date,\n        \"location_city\": this.state.location_city,\n        \"state\": this.state.state,\n        \"category\": this.state.category,\n        \"distance\": this.state.distance,\n        \"swim_distance\": this.state.swim_distance,\n        \"bike_distance\": this.state.bike_distance,\n        \"run_distance\": this.state.run_distance,\n        \"website\": this.state.website,\n        \"email\": this.state.email,\n        \"summary\": this.state.summary,\n        \"race_type\": this.state.race_type,\n        \"cycling_type\": this.state.cycling_type\n      })\n    })\n    .then(function(response){\n      return response.json()})\n    .then((body)=>{\n        if(body.statusCode ===200){\n          // this.setState: body.message,\n        }else{\n        }\n      })\n  }\n\n  handleNameChange(e){\n    this.setState({\n      name: e.target.value,\n    })\n  }\n\n  handleEvent_date(e){\n    this.setState({\n      event_date: e.target.value,\n    })\n  }\n\n  handleLocationCity(e){\n    this.setState({\n      location_city: e.target.value,\n    })\n  }\n\n  handleState(e){\n    this.setState({\n      state: e.target.value,\n    })\n  }\n\n  handleCategory(e){\n    this.setState({\n      category: e.target.value,\n    })\n  }\n\n  handleDistance(e){\n    this.setState({\n      distance: e.target.value,\n    })\n  }\n\n  handleSwimDistance(e){\n    this.setState({\n      swim_distance: e.target.value,\n    })\n  }\n\n  handleBikeDistance(e){\n    this.setState({\n      bike_distance: e.target.value,\n    })\n  }\n\n  handleRunDistance(e){\n    this.setState({\n      run_distance: e.target.value,\n    })\n  }\n\n  handleWebsite(e){\n    this.setState({\n      website: e.target.value,\n    })\n  }\n\n  handleEmail(e){\n    this.setState({\n      email: e.target.value,\n    })\n  }\n\n  handleSummary(e){\n    this.setState({\n      summary: e.target.value,\n    })\n  }\n\n  handleRaceType(e){\n    this.setState({\n      race_type: e.target.value,\n    })\n  }\n\n  handleCyclingType(e){\n    this.setState({\n      cycling_type: e.target.value,\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <form>\n          <input type=\"text\" name=\"nameIn\" placeholder=\"Input race name\" onChange={this.handleNameChange} required/> <br/>\n          <input type=\"date\" name=\"event_dateIn\" required pattern=\"\\d{4}-\\d{2}-\\d{2}\" onChange={this.handleEvent_date} required/><br/>\n          <input type=\"text\" name=\"location_cityIn\" placeholder=\"Enter Location/State\" onChange={this.handleLocationCity} required/> <br/>\n          <input type=\"text\" name=\"stateIn\" placeholder=\"Input State\" onChange={this.handleState} required/><br/>\n          <input type=\"text\" name=\"categoryIn\" placeholder=\"Input race category\" onChange={this.handleCategory} required/><br/>\n          <input type=\"text\" name=\"distanceIn\" placeholder=\"Input race Distance\" onChange={this.handleDistance} required/><br/>\n          <input type=\"text\" name=\"swim_distanceIn\" placeholder=\"Input swim distance\" onChange={this.handleSwimDistance} required/><br/>\n          <input type=\"text\" name=\"bike_distanceIn\" placeholder=\"Input bike distance\" onChange={this.handleBikeDistance} required/><br/>\n          <input type=\"text\" name=\"run_distanceIn\" placeholder=\"Input run distance\" onChange={this.handleRunDistance} required/><br/>\n          <input type=\"text\" name=\"websiteIn\" placeholder=\"Input race website\" onChange={this.handleWebsite} required/><br/>\n          <input type=\"email\" name=\"emailIn\" placeholder=\"Input organizer email\" onChange={this.handleEmail} required/><br/>\n          <input type=\"text\" name=\"summaryIn\" placeholder=\"Input summary\" onChange={this.handleSummary} required/><br/>\n          <input type=\"text\" name=\"race_typeIn\" placeholder=\"Input race type\" onChange={this.handleRaceType} required/><br/>\n          <input type=\"text\" name=\"cycling_typeIn\" placeholder=\"Input cycling type\" onChange={this.handleCyclingType} required/><br/>\n        </form>\n        <button className=\"addEventButton\" type=\"submit\" onClick={this.handleAddEvent}>Submit Race</button>\n      </div>\n    );\n  }\n}\nexport default AddEvent;\n"]},"metadata":{},"sourceType":"module"}